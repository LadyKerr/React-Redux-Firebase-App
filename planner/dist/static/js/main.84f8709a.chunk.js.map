{"version":3,"sources":["components/layout/SignedInLinks.js","actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","actions/projectActions.js","components/projects/CreateProjects.js","App.js","serviceWorker.js","reducers/projectReducer.js","reducers/authReducer.js","reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebaseReducer","links","uid","ProjectSummary","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","id","key","Notifications","notifications","item","user","content","time","fromNow","Dashboard","this","React","Component","compose","firestoreReducer","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","console","log","authReducer","creds","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","firebase","firestore","createUserWithEmailAndPassword","res","doc","set","createProject","authorId","add","Date","CreateProject","history","push","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initialState","combineReducers","projectReducer","action","message","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","rootReducer","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","useFirestoreForProfile","userProfile","reduxFirestore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.84f8709a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../actions/authActions\";\r\n\r\nconst SignedInLinks = props => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/create\">New Project</NavLink>\r\n      </li>\r\n      <li>\r\n        <a onClick={props.signOut}>Log Out</a>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-2\">\r\n          {props.profile.initials}\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(SignedInLinks);\r\n","export const signIn = creds => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(creds.email, creds.password)\r\n      .then(() => {\r\n        dispatch({ type: \"LOGIN_SUCCESS\" });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"LOGIN_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUp = newUser => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then(res => {\r\n        return firestore\r\n          .collection(\"users\")\r\n          .doc(res.user.uid)\r\n          .set({\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.lastName,\r\n            initials: newUser.firstName[0] + newUser.lastName[0]\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"SIGNUP_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/signup\">Sign up</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/signin\">Login</NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SignedOutLinks;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst NavBar = props => {\r\n  const { auth, profile } = props;\r\n  const links = auth.uid ? (\r\n    <SignedInLinks profile={profile} />\r\n  ) : (\r\n    <SignedOutLinks />\r\n  ); //conditionally render signin/signout view\r\n\r\n  return (\r\n    <nav className=\"nav-wrapper purple lighten-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">\r\n          TaylorPlan\r\n        </Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebaseReducer.auth,\r\n    profile: state.firebaseReducer.profile\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavBar);\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p>\r\n          {project.authorFirstName} {project.authorLastName}\r\n        </p>\r\n        <p className=\"grey-text\">\r\n          {moment(project.createdAt.toDate()).calendar()}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectSummary;\r\n","import React from \"react\";\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {projects &&\r\n        projects.map(project => (\r\n          <Link to={`/project/${project.id}`} key={project.id}>\r\n            <ProjectSummary project={project} />\r\n          </Link>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst Notifications = props => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"online-users\">\r\n            {notifications &&\r\n              notifications.map(item => {\r\n                return (\r\n                  <li key={item.id}>\r\n                    <span className=\"pink-text\">{item.user} </span>\r\n                    <span>{item.content}</span>\r\n                    <div className=\"note-date grey-text\">\r\n                      {moment(item.time.toDate()).fromNow()}\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React from \"react\";\r\nimport ProjectList from \"../projects/ProjectList\";\r\nimport Notifications from \"./Notifications\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Dashboard extends React.Component {\r\n  render() {\r\n    // destructor projects & auth from props\r\n    const { projects, auth, notifications } = this.props;\r\n\r\n    //so if the user isnt logged in, they will be redirected to the signin page!\r\n    if (!auth.uid) {\r\n      return <Redirect to=\"/signin\" />;\r\n    } else {\r\n      return (\r\n        <div className=\"dashboard container\">\r\n          <div className=\"row\">\r\n            <div className=\"col s12 m6\">\r\n              <ProjectList projects={projects} />\r\n            </div>\r\n            <div className=\"col s12 m5 offset-m1\">\r\n              <Notifications notifications={notifications} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  // console.log(state);\r\n  return {\r\n    projects: state.firestoreReducer.ordered.projects,\r\n    auth: state.firebaseReducer.auth,\r\n    notifications: state.firestoreReducer.ordered.notifications\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: \"projects\", orderBy: [\"createdAt\", \"desc\"] },\r\n    { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] } //we connect to the notifications collection to get the # of notifications to display! amazing! =)\r\n  ]) //when the component is loaded, we want to find the projects collection in db; actively listening\r\n)(Dashboard);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectDetails = props => {\r\n  const { project, auth } = props;\r\n\r\n  if (!auth.uid) {\r\n    return <Redirect to=\"/sign\" />;\r\n  }\r\n\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className=\"card-action gray lighten-4 grey-text\">\r\n            <div>\r\n              Posted by: {project.authorFirstName} {project.authorLastName}\r\n            </div>\r\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading Project . . .</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestoreReducer.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project,\r\n    auth: state.firebaseReducer.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"projects\" }])\r\n)(ProjectDetails);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../actions/authActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass SignIn extends React.Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n\r\n    //if a user that's logged in tries to go to signin, it redirects to the dashboard\r\n    if (auth.uid) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signIn: creds => dispatch(signIn(creds))\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state);\r\n  return {\r\n    authError: state.authReducer.authError,\r\n    auth: state.firebaseReducer.auth\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignIn);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { signUp } from \"../../actions/authActions\";\r\n\r\nclass SignUp extends React.Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n\r\n    //if a user that's logged in tries to go to signup, it redirects to the dashboard\r\n    if (auth.uid) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n            <div className=\"center red-text\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state);\r\n  return {\r\n    auth: state.firebaseReducer.auth,\r\n    authError: state.authReducer.authError\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signUp: newUser => dispatch(signUp(newUser))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignUp);\r\n","export const createProject = project => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firestore = getFirestore(); //can now access projects collection in db\r\n    const profile = getState().firebaseReducer.profile;\r\n    const authorId = getState().firebaseReducer.auth.uid;\r\n\r\n    firestore\r\n      .collection(\"projects\")\r\n      .add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: authorId,\r\n        createdAt: new Date()\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"CREATE_PROJECT\", project });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"CREATE_PROJECT_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass CreateProject extends React.Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.createProject(this.state);\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n\r\n    if (!auth.uid) {\r\n      return <Redirect to=\"/sign\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\r\n          <div className=\"input-field\">\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n            <label htmlFor=\"title\">Title</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Project Content</label>\r\n            <textarea\r\n              className=\"materialize-textarea\"\r\n              id=\"content\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: project => dispatch(createProject(project))\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  // console.log(state);\r\n  return {\r\n    auth: state.firebaseReducer.auth\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CreateProject);\r\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport NavBar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProjects\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <NavBar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n  projects: [\r\n    { id: \"1\", title: \"help me find peach\", content: \"blah blah blah\" },\r\n    { id: \"2\", title: \"collect all the stars\", content: \"blah blah blah\" },\r\n    { id: \"3\", title: \"egg hunt with yoshi\", content: \"blah blah blah\" }\r\n  ]\r\n};\r\n\r\nexport const projectReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROJECT\":\r\n      console.log(\"created project\", action.project);\r\n      return state;\r\n    case \"CREATE_PROJECT_ERROR\":\r\n      console.log(\"create-project-error\", action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialState = {\r\n  authError: null\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_ERROR\":\r\n      console.log(\"login error\");\r\n      return {\r\n        ...state,\r\n        authError: \"Login Failed, invalid credentials\"\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      console.log(\"login success\");\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case \"SIGNOUT_SUCCESS\":\r\n      console.log(\"signout success\");\r\n      return state;\r\n    case \"SIGNUP_SUCCESS\":\r\n      console.log(\"signup success\");\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case \"SIGNUP_ERROR\":\r\n      console.log(\"signout error\");\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { projectReducer } from \"./projectReducer\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\n\r\nexport default combineReducers({\r\n  projectReducer,\r\n  authReducer,\r\n  firestoreReducer,\r\n  firebaseReducer //does the auth syncing\r\n});\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIRESTORE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIRESTORE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIRESTORE_DB_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: \"\",\r\n  messagingSenderId: process.env.REACT_APP_FIRESTORE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIRESTORE_APP_ID\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore();\r\n\r\nexport default firebase;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reactReduxFirebase(fbConfig, {\n      useFirestoreForProfile: true,\n      userProfile: \"users\"\n    }),\n    reduxFirestore(fbConfig)\n  )\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}